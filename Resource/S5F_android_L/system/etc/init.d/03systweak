#!/system/bin/sh
#Raises read ahead to 4096. Enhances memory and RAM settings. Enhances network speed. Optimizes kernel features.
#Added some values from Team Kang

busybox mount -o remount,rw -t rootfs /

# Set io scheduler tweaks for mmc
	echo "cfq" > /sys/block/mmcblk0/queue/scheduler
	echo "0" > /sys/block/mmcblk0/queue/rotational
	echo "4096" > /sys/block/mmcblk0/queue/nr_requests
	echo ${READ_AHEAD_KB} > /sys/block/mmcblk0/queue/read_ahead_kb

#Sick Tweaks
rm -f /cache/*.apk
rm -f /cache/*.tmp
rm -f /data/dalvik-cache/*.apk
rm -f /data/dalvik-cache/*.tmp

# =========
# TWEAKS: raising read_ahead_kb cache-value for sd card to 4096 [not needed with above tweak but just in case it doesn't get applied]
# =========
#echo "4096" > /sys/devices/virtual/bdi/179:0/read_ahead_kb

# improved approach of the readahead-tweak:

READ_AHEAD_KB="4096"

if [ -e /sys/devices/virtual/bdi/0:18/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/0:18/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/179:0/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:0/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:0/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:1/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:1/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:2/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:2/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:3/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:3/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:4/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:4/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:5/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:5/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:6/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:6/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/7:7/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:7/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

if [ -e /sys/devices/virtual/bdi/default/read_ahead_kb ]; then
    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/default/read_ahead_kb
    echo "SD card read ahead kb SET to $READ_AHEAD_KB"
fi

# ===============================
# TWEAKS: Memory and RAM Settings
# ===============================
if [ -e /sys/module/lowmemorykiller/parameters/adj ]; then
	echo "0,1,2,4,6,15" > /sys/module/lowmemorykiller/parameters/adj
fi

if [ -e /sys/module/lowmemorykiller/parameters/minfree ]; then
	echo "2560,4096,6144,12288,14336,18432" > /sys/module/lowmemorykiller/parameters/minfree
fi

echo 0 > /proc/sys/vm/swappiness;
echo 50 > /proc/sys/vm/vfs_cache_pressure;

	sysctl -w vm.page-cluster=3;
	sysctl -w vm.laptop_mode=0;
	sysctl -w vm.dirty_expire_centisecs=3000;
	sysctl -w vm.dirty_writeback_centisecs=500;
	sysctl -w vm.dirty_background_ratio=25;
	sysctl -w vm.dirty_ratio=65;
	sysctl -w vm.vfs_cache_pressure=50;
	sysctl -w vm.overcommit_memory=1;
	sysctl -w vm.oom_kill_allocating_task=0;
	sysctl -w vm.panic_on_oom=0;
	sysctl -w kernel.panic_on_oops=1;
	sysctl -w kernel.panic=0;

	echo 3 > /proc/sys/vm/page-cluster;
	echo 0 > /proc/sys/vm/laptop_mode;
	echo 3000 > /proc/sys/vm/dirty_expire_centisecs;
	echo 500 > /proc/sys/vm/dirty_writeback_centisecs;
	echo 25 > /proc/sys/vm/dirty_background_ratio;
	echo 65 > /proc/sys/vm/dirty_ratio;
	echo 50 > /proc/sys/vm/vfs_cache_pressure;
	echo 1 > /proc/sys/vm/overcommit_memory;
	echo 0 > /proc/sys/vm/oom_kill_allocating_task;
	echo 0 > /proc/sys/vm/panic_on_oom;
	echo 1 > /proc/sys/kernel/panic_on_oops;
	echo 0 > /proc/sys/kernel/panic;

# ==============================================================
# network speed and throughput
# ==============================================================
	# =========
	# TWEAKS: for TCP read/write
	# =========
	sysctl -w net.ipv4.tcp_timestamps=0;
	sysctl -w net.ipv4.tcp_tw_reuse=1;
	sysctl -w net.ipv4.tcp_sack=1;
	sysctl -w net.ipv4.tcp_dsack=1;
	sysctl -w net.ipv4.tcp_tw_recycle=1;
	sysctl -w net.ipv4.tcp_window_scaling=1;
	sysctl -w net.ipv4.tcp_keepalive_probes=5;
	sysctl -w net.ipv4.tcp_keepalive_intvl=30;
	sysctl -w net.ipv4.tcp_fin_timeout=30;
	echo 0 > /proc/sys/net/ipv4/tcp_timestamps;
	echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse;
	echo 1 > /proc/sys/net/ipv4/tcp_sack;
	echo 1 > /proc/sys/net/ipv4/tcp_dsack;
	echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle;
	echo 1 > /proc/sys/net/ipv4/tcp_window_scaling;
	echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes;
	echo 30 > /proc/sys/net/ipv4/tcp_keepalive_intvl;
	echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout;
	echo 524288 > /proc/sys/net/core/wmem_max;
	echo 524288 > /proc/sys/net/core/rmem_max;

sysctl -w net.ipv4.tcp_moderate_rcvbuf=1;
echo 1 > /proc/sys/net/ipv4/tcp_moderate_rcvbuf # enabled by default
echo 256960 > /proc/sys/net/core/rmem_default;
echo 256960 > /proc/sys/net/core/wmem_default;
echo 4096 16384 404480 > /proc/sys/net/ipv4/tcp_wmem;
echo 4096 87380 404480 > /proc/sys/net/ipv4/tcp_rmem;
setprop net.tcp.buffersize.default 4096,87380,256960,4096,16384,256960;
setprop net.tcp.buffersize.wifi 4095,87380,256960,4096,16384,256960;
setprop net.tcp.buffersize.umts 4094,87380,256960,4096,16384,256960;
setprop net.tcp.buffersize.gprs 4094,87380,256960,4096,16384,256960;
setprop net.tcp.buffersize.edge 4094,87380,256960,4096,16384,256960;

# =========
# TWEAKS: overall
# =========
echo 64000 > /proc/sys/kernel/msgmni;

sysctl -w kernel.sem="500 512000 100 2048";
if [ -e /proc/sys/kernel/sem ];
then
	echo 500 512000 100 2048 > /proc/sys/kernel/sem; # allow more semaphores
fi;
sysctl -w kernel.shmmax=268435456;
if [ -e /proc/sys/kernel/shmmax ];
then
	echo 268435456 > /proc/sys/kernel/shmmax; # Increased max shared memory segment
fi;
sysctl -w kernel.msgmni=1024;
if [ -e /proc/sys/kernel/msgmni ];
then
	echo 1024 > /proc/sys/kernel/msgmni;
fi;

# =============
# Kernel tweaks
# =============

echo "now disabling GENTLE_FAIR_SLEEPERS"
echo "NO_GENTLE_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
cat /sys/kernel/debug/sched_features
echo "done"
echo ""
echo "now disabling FAIR_SLEEPERS"
echo "NO_NEW_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
cat /sys/kernel/debug/sched_features
echo "done"
echo "now disabling NORMALIZED_SLEEPERS"
echo "NO_NORMALIZED_SLEEPER" > /sys/kernel/debug/sched_features;
cat /sys/kernel/debug/sched_features
echo "done"
if [ -e /proc/sys/kernel/sched_features ]
then
	echo "24319" > /proc/sys/kernel/sched_features;
fi;

echo "now disabling FAIR_SLEEPERS"
echo "NO_NEW_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features
cat /sys/kernel/debug/sched_features
echo "done"
echo ""
echo "now disabling START_DEBIT"
echo "NO_START_DEBIT" > /sys/kernel/debug/sched_features
cat /sys/kernel/debug/sched_features
echo "done"
echo ""
echo "now disabling LB_BIAS"
echo "NO_LB_BIAS" > /sys/kernel/debug/sched_features
cat /sys/kernel/debug/sched_features
echo "done"
echo ""

echo "now disabling NEXT_BUDDY"
echo "NO_NEXT_BUDDY" > /sys/kernel/debug/sched_features
cat /sys/kernel/debug/sched_features
echo "done"
echo ""

echo "now enabling sched_child_runs_first"
echo "1" > /proc/sys/kernel/sched_child_runs_first
cat /proc/sys/kernel/sched_child_runs_first
echo "done"
echo ""

echo "now enabling the low-latency functionality of CFS provided by"
echo "Mathieu Desnoyers & Peter Zijlstra, sponsored by Nokia"

#for opt in DYN_MIN_VRUNTIME \
        NO_FAIR_SLEEPERS FAIR_SLEEPERS_INTERACTIVE FAIR_SLEEPERS_TIMER \
        INTERACTIVE TIMER \
        INTERACTIVE_FORK_EXPEDITED TIMER_FORK_EXPEDITED;
echo $opt > /sys/kernel/debug/sched_features;
echo "done"
